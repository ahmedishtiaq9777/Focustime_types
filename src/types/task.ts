export interface TaskAttributes {
  id: number;
  title: string;
  is_completed?: boolean;
  scheduled_for?: Date;
  created_at?: Date;
  user_id: number;
  description?: string;
  status?: string;
  priority?: string;
  image_url?: string;
  is_important?: boolean;
  completed_at?: Date;
}

export type TaskStatus = "Not Started" | "In Progress" | "Completed";
export type TaskPriority = "Low" | "Moderate" | "Extreme";

/**
 * Data Transfer Object used when creating a new Task
 * Sent from frontend → backend
 * (No id or created_at, those are generated by backend)
 */
export type CreateTaskDTO = Omit<TaskAttributes, "id" | "created_at">;

/**
 * Data Transfer Object used when updating an existing Task
 * Sent from frontend → backend
 * (All fields optional, no id/user_id since those are fixed)
 */
export type UpdateTaskDTO = Partial<
  Omit<TaskAttributes, "id" | "created_at" | "user_id">
>;

/**
 * Data Transfer Object used when returning a Task from backend → frontend
 * This represents what API responses will contain
 */
export type TaskResponseDTO = TaskAttributes;
export type TaskList = TaskAttributes[];

/**
 * Represents a paginated response of tasks
 * Useful for dashboard or list views
 */
export interface PaginatedTasksResponse {
  tasks: TaskAttributes[];
  currentPage: number;
  totalPages: number;
  totaltasks: number;
}
/**
  Represents filters that frontend may send when fetching tasks
 (e.g., search, status, priority)
 */
export interface TaskFilterQuery {
  search?: string;
  status?: string;
  priority?: string;
  page?: number;
  limit?: number;
}
